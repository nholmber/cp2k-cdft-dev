# Tested with: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.4.196 Build 20170411
#              Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410
#              Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.5.274 Build 20180823
#              Intel MPI, MKL
# Author: Matthias Krack (matthias.krack@psi.ch, PSI, October 2018)

CC          = mpicc
CPP         =
FC          = mpiifort
LD          = mpiifort
AR          = ar -r
CPPFLAGS    =
DFLAGS      = -D__F2008 -D__FFTW3 -D__MKL -D__MPI_VERSION=3 \
              -D__parallel -D__SCALAPACK
CFLAGS      = $(DFLAGS) -O2
FCFLAGS     = $(DFLAGS) -O2 -fpp -free -funroll-loops
FCFLAGS    += -fp-model precise
FCFLAGS    += -g -traceback
FCFLAGS    += -I${MKLROOT}/include -I${MKLROOT}/include/fftw
LDFLAGS     = $(FCFLAGS) -static-intel -static_mpi
LDFLAGS_C   = $(FCFLAGS) -static-intel -nofor_main
MKL_LIB     = ${MKLROOT}/lib/intel64
LIBS        = $(MKL_LIB)/libmkl_scalapack_lp64.a \
              -Wl,--start-group \
              $(MKL_LIB)/libmkl_intel_lp64.a \
              ${MKL_LIB}/libmkl_sequential.a \
      	     $(MKL_LIB)/libmkl_core.a \
              ${MKL_LIB}/libmkl_blacs_intelmpi_lp64.a \
              -Wl,--end-group

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
	$(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
